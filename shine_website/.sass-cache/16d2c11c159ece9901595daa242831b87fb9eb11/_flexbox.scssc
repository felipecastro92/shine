3.2.10 (Media Mark)
08aa70f143bf0c06450046332dcc74011d8172c5
o:Sass::Tree::RootNode
:@template"ß.@import "shared";

// NOTE:
// All mixins for the @box spec have been written assuming they'll be fed property values that
// correspond to the standard spec.  Some mixins can be fed values from the @box spec, but don't
// rely on it.  The `legacy-order` mixin will increment the value fed to it because the @box
// `box-ordinal-group` property begins indexing at 1, while the modern `order` property begins
// indexing at 0.

// ---------------------------------------------------------------------- | @flex

// September 2012 Candidate Recommendation (http://www.w3.org/TR/2012/CR-css3-flexbox-20120918/)
// NOTE: FF did not support wrapping until version ??.  Because the `display: flex` property
// is wrapped in a `@supports (flex-wrap: wrap)` block (when $flex-wrap-required or the $wrap
// argument to the `display-flex` mixin is set to `true`), it will Just Work(TM) when support is
// finally added
// Chrome 21 (prefixed)
// Opera 12.1 (unprefixed)
// Firefox 20 (unprefixed)
$flex-support: not -moz, -webkit, not -ms, not -o, not -khtml !default;

// if `true`, `$flex-legacy-enabled` is treated as false and an `@supports` block is added to 
// the display property to hide the standard value from versions of Firefox that support the
// unprefixed properties, but do not support wrapping
// (this includes suppressing the automatic emittion of @box properties)
$flex-wrap-required : false !default;

// ---------------------------------------------------------------------- | @flexbox

// March 2012 Working Draft (http://www.w3.org/TR/2012/WD-css3-flexbox-20120322/)
// Chrome 17 (prefixed)
// Internet Explorer 10 (prefixed)
$flexbox-support: not -moz, -webkit, -ms, not -o, not -khtml, not standard !default;

// ---------------------------------------------------------------------- | @box

// July 2009 Working Draft (http://www.w3.org/TR/2009/WD-css3-flexbox-20090723/)
// NOTE: no browser that implements this spec is known to support `box-lines: multiple`
// Chrome 4? (prefixed)
// Safari 3.1 (prefixed)
// Firefox <20 (prefixed)
$box-support: -moz, -webkit, not -ms, not -o, not -khtml, not standard !default;

// If `true`, the @box properties will be emitted as part of the normal mixin call
// (if this is false, you're still free to explicitly call the legacy mixins yourself)
$flex-legacy-enabled: false !default;

// ====================================================================================================
//                                                                       | Common
// ====================================================================================================

// function for converting a value from the standard specification to one that is comparable from
// an older specification
@function flex-translate-value($value, $version: box) {
	$value: unquote($value);

	@if $value == flex {
		@return if($version == box, box, flexbox);
	} @else if $value == inline-flex {
		@return if($version == box, inline-box, inline-flexbox);
	} @else if $value == flex-start {
		@return start;
	} @else if $value == flex-end {
		@return end;
	} @else if $value == space-between {
		@return justify;
	} @else if $value == space-around { // @box doesn't have a value equivalent to `space-around`
		@return if($version == box, justify, distribute);
	}
	@return $value;
}

@function flex-support-either() {
	$common: ();
	@for $i from 1 through length($flex-support) {
		$common: append($common, nth($flex-support, $i) or nth($flexbox-support, $i), comma);
	}
	@return $common;
}

// ====================================================================================================
//                                                                       | Display Property
// ====================================================================================================

// $type: flex | inline-flex
@mixin display-flex($type: flex, $wrap: $flex-wrap-required, $legacy: $flex-legacy-enabled) {
	@if $legacy and not $wrap {
		@include legacy-display-flex($type);
	}
	
	@include experimental-value(display, flex-translate-value($type, flexbox), $flexbox-support...);
	
	// if `$wrap` is true, then we need to suppress official support as generated by the `experimental()`
	// mixin so that we can insert it inside an `@supports` block
	$flex-support-standard: true;
	$flex-support-list: $flex-support;
	@if length($flex-support) > 5 {
		$flex-support-standard: nth($flex-support, 6);
		// a `slice()` function would really be handy here...
		$flex-support-list: nth($flex-support, 1), nth($flex-support, 2), nth($flex-support, 3), nth($flex-support, 4), nth($flex-support, 5);
	}
	$flex-support-list: append($flex-support-list, if($wrap, false, $flex-support-standard));
	@include experimental-value(display, $type, $flex-support-list...);
	
	@if $wrap and $flex-support-standard {
		@supports (flex-wrap: wrap) {
			display: $type;
		}
	}
}

@mixin legacy-display-flex($type: flex) {
	@include experimental-value(display, flex-translate-value($type, box), $box-support...);
}

// ====================================================================================================
//                                                                       | Flex Container Properties
// ====================================================================================================

// $value: <'flex-direction'> || <'flex-wrap'>
@mixin flex-flow($value: row nowrap, $wrap: $flex-wrap-required, $legacy: $flex-legacy-enabled) {
	@if $legacy and not $wrap {
		@include legacy-flex-flow($value);
	}
	
	@include experimental(flex-flow, $value, flex-support-either()...);
}

@mixin legacy-flex-flow($value: row nowrap) {
	@if length($value) > 1 { // @box version doesn't have a shorthand
		@include legacy-flex-direction(nth($value, 1));
		@include legacy-flex-wrap(nth($value, 2));
	} @else {
		$value: unquote($value);
		@if $value == row or $value == row-reverse or $value == column or $value == column-reverse {
			@include legacy-flex-direction($value);
		} @else {
			@include legacy-flex-wrap($value);
		}
	}
}

// ----------------------------------------------------------------------

// $value: row | row-reverse | column | column-reverse
@mixin flex-direction($value: row, $wrap: $flex-wrap-required, $legacy: $flex-legacy-enabled) {
	@if $legacy and not $wrap {
		@include legacy-flex-direction($value);
	}
	
	@include experimental(flex-direction, $value, flex-support-either()...);
}

@mixin legacy-flex-direction($value: row) {
	$value: unquote($value);
	@include experimental(box-orient, if($value == row or $value == row-reverse, horizontal, vertical), $box-support...);
	@include experimental(box-direction, if($value == row-reverse or $value == column-reverse, reverse, normal), $box-support...);
}

// ----------------------------------------------------------------------

// $value: nowrap | wrap | wrap-reverse
@mixin flex-wrap($value: nowrap, $wrap: $flex-wrap-required, $legacy: $flex-legacy-enabled) {
	@if $legacy and not $wrap {
		@include legacy-flex-wrap($value);
	}
	
	@include experimental(flex-wrap, $value, flex-support-either()...);
}

@mixin legacy-flex-wrap($value: nowrap) {
	// NOTE: @box has no equivalent of wrap-reverse
	@include experimental(box-lines, if($value == nowrap, single, multiple), $box-support...);
}

// ----------------------------------------------------------------------

// Distributing extra space along the "main axis"
// $value: flex-start | flex-end | center | space-between | space-around
@mixin justify-content($value: flex-start, $wrap: $flex-wrap-required, $legacy: $flex-legacy-enabled) {
	@if $legacy and not $wrap {
		@include legacy-justify-content($value);
	}
	
	@include experimental(flex-pack, flex-translate-value($value, flexbox), $flexbox-support...);
	@include experimental(justify-content, $value, $flex-support...);
}

@mixin legacy-justify-content($value: flex-start) {
	@include experimental(box-pack, flex-translate-value($value, box), $box-support...);
}

// ----------------------------------------------------------------------

// Distributing extra space along the "cross axis"
// $value: flex-start | flex-end | center | space-between | space-around | stretch
@mixin align-content($value: flex-start, $wrap: $flex-wrap-required, $legacy: $flex-legacy-enabled) {
	@if $legacy and not $wrap {
		@include legacy-align-content($value);
	}
	
	@include experimental(flex-line-pack, flex-translate-value($value, flexbox), $flexbox-support...);
	@include experimental(align-content, $value, $flex-support...);
}

@mixin legacy-align-content($value: flex-start) {
	@include experimental(box-align, flex-translate-value($value, box), $box-support...);
}

// ----------------------------------------------------------------------

// Align items along the "cross axis"
// $value: flex-start | flex-end | center | baseline | stretch
@mixin align-items($value: stretch) { // the flex container
	// There is no @box version of this property
	@include experimental(flex-align, flex-translate-value($value, flexbox), $flexbox-support...);
	@include experimental(align-items, $value, $flex-support...);
}

// ====================================================================================================
//                                                                       | Flex Item Properties
// ====================================================================================================

// $value: none | [ <'flex-grow'> <'flex-shrink'>? || <'flex-basis'> ]
@mixin flex($value: 0 1 auto, $wrap: $flex-wrap-required, $legacy: $flex-legacy-enabled) {
	$value: unquote($value);
	@if $legacy and unitless(nth($value, 1)) {
		// @box version does not have a shorthand, see `legacy-flex-grow`
		@include legacy-flex-grow(nth($value, 1));
	}
	
	@include experimental(flex, $value, flex-support-either()...);
}

// ----------------------------------------------------------------------

// $value: Integer
@mixin flex-grow($value: 0, $wrap: $flex-wrap-required, $legacy: $flex-legacy-enabled) {
	@if $legacy and not $wrap {
		@include legacy-flex-grow($value);
	}
	
	// There is no @flexbox version of this property
	@include experimental(flex-grow, $value, $flex-support...);
}

@mixin legacy-flex-grow($value: 0) {
	@include experimental(box-flex, $value, $box-support...);
}

// ----------------------------------------------------------------------

// $value: Integer
@mixin flex-shrink($value: 1) {
	// There is no @box version of this property
	// There is no @flexbox version of this property
	@include experimental(flex-shrink, $value, $flex-support...);
}

// ----------------------------------------------------------------------

// $value: united number (eg: 100px)
@mixin flex-basis($value: auto) {
	// There is no @box version of this property
	// There is no @flexbox version of this property
	@include experimental(flex-basis, $value, $flex-support...);
}

// ----------------------------------------------------------------------

// Align items along the "cross axis" -- overrides `align-items` value on individual items
// $value: auto | flex-start | flex-end | center | baseline | stretch
@mixin align-self($value: auto) { // children of flex containers
	// There is no @box version of this property
	@include experimental(flex-item-align, flex-translate-value($value, flexbox), $flexbox-support...);
	@include experimental(align-self, $value, $flex-support...);
}

// ----------------------------------------------------------------------

// $value: Integer
@mixin order($value: 0, $wrap: $flex-wrap-required, $legacy: $flex-legacy-enabled) {
	@if $legacy and not $wrap {
		@include legacy-order($value);
	}
	
	@include experimental(flex-order, $value, $flexbox-support...);
	@include experimental(order, $value, $flex-support...);
}

@mixin legacy-order($value: 0) {
	// the @box spec starts the ordering at 1 instead of 0 like the modern specs
	@include experimental(box-ordinal-group, $value + 1, $box-support...);
}
:
@linei:@options{ :@has_childrenT:@children[Go:Sass::Tree::ImportNode;0;i;@:@imported_file0;
[ :@imported_filename"sharedo:Sass::Tree::CommentNode
;i;@;
[ :
@type:silent:@value["/* NOTE:
 * All mixins for the @box spec have been written assuming they'll be fed property values that
 * correspond to the standard spec.  Some mixins can be fed values from the @box spec, but don't
 * rely on it.  The `legacy-order` mixin will increment the value fed to it because the @box
 * `box-ordinal-group` property begins indexing at 1, while the modern `order` property begins
 * indexing at 0. */o;
;i;@;
[ ;;;["Y/* ---------------------------------------------------------------------- | @flex */o;
;i;@;
[ ;;;["Þ/* September 2012 Candidate Recommendation (http://www.w3.org/TR/2012/CR-css3-flexbox-20120918/)
 * NOTE: FF did not support wrapping until version ??.  Because the `display: flex` property
 * is wrapped in a `@supports (flex-wrap: wrap)` block (when $flex-wrap-required or the $wrap
 * argument to the `display-flex` mixin is set to `true`), it will Just Work(TM) when support is
 * finally added
 * Chrome 21 (prefixed)
 * Opera 12.1 (unprefixed)
 * Firefox 20 (unprefixed) */o:Sass::Tree::VariableNode;i:@guarded"!default;@:
@name"flex-support:
@expro:Sass::Script::List	:@separator:
comma;i;@;[
o:!Sass::Script::UnaryOperation	;i;@:@operator:not:@operando:Sass::Script::String	;i;@;:identifier;"	-mozo;	;i;@;;;"-webkito;	;i;@;;;o;	;i;@;;;"-mso;	;i;@;;;o;	;i;@;;;"-oo;	;i;@;;;o;	;i;@;;;"-khtml;
[ o;
;i;@;
[ ;;;["=/* if `true`, `$flex-legacy-enabled` is treated as false and an `@supports` block is added to 
 * the display property to hide the standard value from versions of Firefox that support the
 * unprefixed properties, but do not support wrapping
 * (this includes suppressing the automatic emittion of @box properties) */o;;i;"!default;@;"flex-wrap-required;o:Sass::Script::Bool;i;@;F;
[ o;
;i!;@;
[ ;;;["\/* ---------------------------------------------------------------------- | @flexbox */o;
;i#;@;
[ ;;;["/* March 2012 Working Draft (http://www.w3.org/TR/2012/WD-css3-flexbox-20120322/)
 * Chrome 17 (prefixed)
 * Internet Explorer 10 (prefixed) */o;;i&;"!default;@;"flexbox-support;o;	;;;i&;@;[o;	;i&;@;;;o;	;i&;@;;;"	-mozo;	;i&;@;;;"-webkito;	;i&;@;;;"-mso;	;i&;@;;;o;	;i&;@;;;"-oo;	;i&;@;;;o;	;i&;@;;;"-khtmlo;	;i&;@;;;o;	;i&;@;;;"standard;
[ o;
;i(;@;
[ ;;;["X/* ---------------------------------------------------------------------- | @box */o;
;i*;@;
[ ;;;["ö/* July 2009 Working Draft (http://www.w3.org/TR/2009/WD-css3-flexbox-20090723/)
 * NOTE: no browser that implements this spec is known to support `box-lines: multiple`
 * Chrome 4? (prefixed)
 * Safari 3.1 (prefixed)
 * Firefox <20 (prefixed) */o;;i/;"!default;@;"box-support;o;	;;;i/;@;[o;	;i/;@;;;"	-mozo;	;i/;@;;;"-webkito;	;i/;@;;;o;	;i/;@;;;"-mso;	;i/;@;;;o;	;i/;@;;;"-oo;	;i/;@;;;o;	;i/;@;;;"-khtmlo;	;i/;@;;;o;	;i/;@;;;"standard;
[ o;
;i1;@;
[ ;;;["¬/* If `true`, the @box properties will be emitted as part of the normal mixin call
 * (if this is false, you're still free to explicitly call the legacy mixins yourself) */o;;i3;"!default;@;"flex-legacy-enabled;o;;i3;@;F;
[ o;
;i5;@;
[ ;;;["$/* ====================================================================================================
 *                                                                       | Common
 * ==================================================================================================== */o;
;i9;@;
[ ;;;["~/* function for converting a value from the standard specification to one that is comparable from
 * an older specification */o:Sass::Tree::FunctionNode;i;;@;"flex-translate-value;	T;
[o;;i<;0;@;"
value;o:Sass::Script::Funcall:@keywords{ ;i<;@;"unquote:@splat0:
@args[o:Sass::Script::Variable	;i<;@;"
value:@underscored_name"
value;
[ u:Sass::Tree::IfNodee
[o:Sass::Script::Operation
:
@linei>:@operand1o:Sass::Script::Variable	;i>:@options{ :
@name"
value:@underscored_name"
value;	@:@operator:eq:@operand2o:Sass::Script::String	;i>;	@:
@type:identifier:@value"	flexu:Sass::Tree::IfNodel[o:Sass::Script::Operation
:
@linei@:@operand1o:Sass::Script::Variable	;i@:@options{ :
@name"
value:@underscored_name"
value;	@:@operator:eq:@operand2o:Sass::Script::String	;i@;	@:
@type:identifier:@value"inline-flexu:Sass::Tree::IfNode^[o:Sass::Script::Operation
:
@lineiB:@operand1o:Sass::Script::Variable	;iB:@options{ :
@name"
value:@underscored_name"
value;	@:@operator:eq:@operand2o:Sass::Script::String	;iB;	@:
@type:identifier:@value"flex-startu:Sass::Tree::IfNode[o:Sass::Script::Operation
:
@lineiD:@operand1o:Sass::Script::Variable	;iD:@options{ :
@name"
value:@underscored_name"
value;	@:@operator:eq:@operand2o:Sass::Script::String	;iD;	@:
@type:identifier:@value"flex-endu:Sass::Tree::IfNode¼[o:Sass::Script::Operation
:
@lineiF:@operand1o:Sass::Script::Variable	;iF:@options{ :
@name"
value:@underscored_name"
value;	@:@operator:eq:@operand2o:Sass::Script::String	;iF;	@:
@type:identifier:@value"space-betweenu:Sass::Tree::IfNoded[o:Sass::Script::Operation
:
@lineiH:@operand1o:Sass::Script::Variable	;iH:@options{ :
@name"
value:@underscored_name"
value;	@:@operator:eq:@operand2o:Sass::Script::String	;iH;	@:
@type:identifier:@value"space-around0[o:Sass::Tree::CommentNode
;iH;	@:@children[ ;:silent;["A/* @box doesn't have a value equivalent to `space-around` */o:Sass::Tree::ReturnNode	;iI;	@:
@expro:Sass::Script::Funcall:@keywords{ ;iI;	@;
"if:@splat0:
@args[o; 
;iI;o;	;iI;	@;
"version;"version;	@;;;o;	;iI;	@;;;"boxo;	;iI;	@;;;"justifyo;	;iI;	@;;;"distribute;[ [o:Sass::Tree::ReturnNode	;iG;	@:
@expro;	;iG;	@;;;"justify:@children[ [o:Sass::Tree::ReturnNode	;iE;	@:
@expro;	;iE;	@;;;"end:@children[ [o:Sass::Tree::ReturnNode	;iC;	@:
@expro;	;iC;	@;;;"
start:@children[ [o:Sass::Tree::ReturnNode	;iA;	@:
@expro:Sass::Script::Funcall:@keywords{ ;iA;	@;
"if:@splat0:
@args[o; 
;iA;o;	;iA;	@;
"version;"version;	@;;;o;	;iA;	@;;;"boxo;	;iA;	@;;;"inline-boxo;	;iA;	@;;;"inline-flexbox:@children[ [o:Sass::Tree::ReturnNode	;i?;	@:
@expro:Sass::Script::Funcall:@keywords{ ;i?;	@;
"if:@splat0:
@args[o; 
;i?;o;	;i?;	@;
"version;"version;	@;;;o;	;i?;	@;;;"boxo;	;i?;	@;;;"boxo;	;i?;	@;;;"flexbox:@children[ o:Sass::Tree::ReturnNode	;iK;@;o;%	;iK;@;"
value;&"
value;
[ ;#0;$[[o;%;@;"
value;&"
value0[o;%;@;"version;&"versiono;	;i;;@;;;"boxo; ;iN;@;"flex-support-either;	T;
[o;;iO;0;@;"common;o;	;:
space;iO;@;[ ;
[ o:Sass::Tree::ForNode:
@fromo:Sass::Script::Number;iP;@:@denominator_units[ :@numerator_units[ :@original"1;i;iP;@:	@var"i;	T;
[o;;iQ;0;@;"common;o;!;"{ ;iQ;@;"append;#0;$[o;%	;iQ;@;"common;&"commono:Sass::Script::Operation
;iQ:@operand1o;!;"{ ;iQ;@;"nth;#0;$[o;%	;iQ;@;"flex-support;&"flex_supporto;%	;iQ;@;"i;&"i;@;:or:@operand2o;!;"{ ;iQ;@;"nth;#0;$[o;%	;iQ;@;"flexbox-support;&"flexbox_supporto;%	;iQ;@;"i;&"io;	;iQ;@;;;"
comma;
[ :@too;!;"{ ;iP;@;"length;#0;$[o;%	;iP;@;"flex-support;&"flex_support:@exclusiveFo;(	;iS;@;o;%	;iS;@;"common;&"common;
[ ;#0;$[ o;
;iV;@;
[ ;;;["./* ====================================================================================================
 *                                                                       | Display Property
 * ==================================================================================================== */o;
;iZ;@;
[ ;;;["$/* $type: flex | inline-flex */o:Sass::Tree::MixinDefNode;i[;@;"display-flex;	T;
[u;'~[o:Sass::Script::Operation
:
@linei\:@operand1o:Sass::Script::Variable	;i\:@options{ :
@name"legacy:@underscored_name"legacy;	@:@operator:and:@operand2o:!Sass::Script::UnaryOperation	;i\;	@;:not:@operando;	;i\;	@;
"	wrap;"	wrap0[o:Sass::Tree::MixinNode:@keywords{ ;i];	@;
"legacy-display-flex:@children[ :@splat0:
@args[o;	;i];	@;
"	type;"	typeo:Sass::Tree::MixinNode;"{ ;i`;@;"experimental-value;
[ ;#o;%	;i`;{ ;"flexbox-support;&"flexbox_support;$[o;	;i`;@;;;"displayo;!;"{ ;i`;@;"flex-translate-value;#0;$[o;%	;i`;@;"	type;&"	typeo;	;i`;@;;;"flexboxo;
;ib;@;
[ ;;;["¦/* if `$wrap` is true, then we need to suppress official support as generated by the `experimental()`
 * mixin so that we can insert it inside an `@supports` block */o;;id;0;@;"flex-support-standard;o;;id;@;T;
[ o;;ie;0;@;"flex-support-list;o;%	;ie;@;"flex-support;&"flex_support;
[ u;'ù[o:Sass::Script::Operation
:
@lineif:@operand1o:Sass::Script::Funcall:@keywords{ ;if:@options{ :
@name"length:@splat0:
@args[o:Sass::Script::Variable	;if;
@	;"flex-support:@underscored_name"flex_support;
@	:@operator:gt:@operand2o:Sass::Script::Number;if;
@	:@denominator_units[ :@numerator_units[ :@original"5:@valuei
0[o:Sass::Tree::VariableNode;ig:@guarded0;
@	;"flex-support-standard:
@expro;;	{ ;ig;
@	;"nth;0;[o;	;ig;
@	;"flex-support;"flex_supporto;;ig;
@	;@;[ ;"6;i:@children[ o:Sass::Tree::CommentNode
;ih;
@	;[ :
@type:silent;["=/* a `slice()` function would really be handy here... */o;;ii;0;
@	;"flex-support-list;o:Sass::Script::List	:@separator:
comma;ii;
@	;[
o;;	{ ;ii;
@	;"nth;0;[o;	;ii;
@	;"flex-support;"flex_supporto;;ii;
@	;@;[ ;"1;io;;	{ ;ii;
@	;"nth;0;[o;	;ii;
@	;"flex-support;"flex_supporto;;ii;
@	;@;[ ;"2;io;;	{ ;ii;
@	;"nth;0;[o;	;ii;
@	;"flex-support;"flex_supporto;;ii;
@	;@;[ ;"3;io;;	{ ;ii;
@	;"nth;0;[o;	;ii;
@	;"flex-support;"flex_supporto;;ii;
@	;@;[ ;"4;i	o;;	{ ;ii;
@	;"nth;0;[o;	;ii;
@	;"flex-support;"flex_supporto;;ii;
@	;@;[ ;"5;i
;[ o;;ik;0;@;"flex-support-list;o;!;"{ ;ik;@;"append;#0;$[o;%	;ik;@;"flex-support-list;&"flex_support_listo;!;"{ ;ik;@;"if;#0;$[o;%	;ik;@;"	wrap;&"	wrapo;;ik;@;Fo;%	;ik;@;"flex-support-standard;&"flex_support_standard;
[ o;8;"{ ;il;@;"experimental-value;
[ ;#o;%	;il;{ ;"flex-support-list;&"flex_support_list;$[o;	;il;@;;;"displayo;%	;il;@;"	type;&"	typeu;'0[o:Sass::Script::Operation
:
@linein:@operand1o:Sass::Script::Variable	;in:@options{ :
@name"	wrap:@underscored_name"	wrap;	@:@operator:and:@operand2o;	;in;	@;
"flex-support-standard;"flex_support_standard0[o:Sass::Tree::SupportsNode;io;	@;
"supports:@has_childrenT:@children[o:Sass::Tree::PropNode;ip;	@;
["display:@prop_syntax:new;[ :
@tabsi :@valueo;	;ip;	@;
"	type;"	type;" ;i :@conditiono: Sass::Supports::Declaration;
o:Sass::Script::String	;io;	@:
@type:identifier;"flex-wrap;o;	;io;	@;;;"	wrap;#0;$[[o;%;@;"	type;&"	typeo;	;i[;@;;;"	flex[o;%;@;"	wrap;&"	wrapo;%	;i[;@;"flex-wrap-required;&"flex_wrap_required[o;%;@;"legacy;&"legacyo;%	;i[;@;"flex-legacy-enabled;&"flex_legacy_enabledo;7;iu;@;"legacy-display-flex;	T;
[o;8;"{ ;iv;@;"experimental-value;
[ ;#o;%	;iv;{ ;"box-support;&"box_support;$[o;	;iv;@;;;"displayo;!;"{ ;iv;@;"flex-translate-value;#0;$[o;%	;iv;@;"	type;&"	typeo;	;iv;@;;;"box;#0;$[[o;%;@;"	type;&"	typeo;	;iu;@;;;"	flexo;
;iy;@;
[ ;;;["7/* ====================================================================================================
 *                                                                       | Flex Container Properties
 * ==================================================================================================== */o;
;i};@;
[ ;;;["6/* $value: <'flex-direction'> || <'flex-wrap'> */o;7;i~;@;"flex-flow;	T;
[u;'[o:Sass::Script::Operation
:
@linei:@operand1o:Sass::Script::Variable	;i:@options{ :
@name"legacy:@underscored_name"legacy;	@:@operator:and:@operand2o:!Sass::Script::UnaryOperation	;i;	@;:not:@operando;	;i;	@;
"	wrap;"	wrap0[o:Sass::Tree::MixinNode:@keywords{ ;i{;	@;
"legacy-flex-flow:@children[ :@splat0:
@args[o;	;i{;	@;
"
value;"
valueo;8;"{ ;i~;@;"experimental;
[ ;#o;!;"{ ;i~;{ ;"flex-support-either;#0;$[ ;$[o;	;i~;@;;;"flex-flowo;%	;i~;@;"
value;&"
value;#0;$[[o;%;@;"
value;&"
valueo;	;;);i~;@;[o;	;i~;@;;;"rowo;	;i~;@;;;"nowrap[o;%;@;"	wrap;&"	wrapo;%	;i~;@;"flex-wrap-required;&"flex_wrap_required[o;%;@;"legacy;&"legacyo;%	;i~;@;"flex-legacy-enabled;&"flex_legacy_enabledo;7;i;@;"legacy-flex-flow;	T;
[u;'£[o:Sass::Script::Operation
:
@linei:@operand1o:Sass::Script::Funcall:@keywords{ ;i:@options{ :
@name"length:@splat0:
@args[o:Sass::Script::Variable	;i;
@	;"
value:@underscored_name"
value;
@	:@operator:gt:@operand2o:Sass::Script::Number;i;
@	:@denominator_units[ :@numerator_units[ :@original"1:@valueiu:Sass::Tree::IfNode[00[o:Sass::Tree::VariableNode:
@linei:@guarded0:@options{ :
@name"
value:
@expro:Sass::Script::Funcall:@keywords{ ;i;@;	"unquote:@splat0:
@args[o:Sass::Script::Variable	;i;@;	"
value:@underscored_name"
value:@children[ u:Sass::Tree::IfNode[o:Sass::Script::Operation
:
@linei:@operand1o; 
;i;o; 
;i;o; 
;i;o:Sass::Script::Variable	;i:@options{ :
@name"
value:@underscored_name"
value;	@:@operator:eq:@operand2o:Sass::Script::String	;i;	@:
@type:identifier:@value"row;	@;:or;o; 
;i;o;	;i;	@;
"
value;"
value;	@;;;o;	;i;	@;;;"row-reverse;	@;;;o; 
;i;o;	;i;	@;
"
value;"
value;	@;;;o;	;i;	@;;;"column;	@;;;o; 
;i;o;	;i;	@;
"
value;"
value;	@;;;o;	;i;	@;;;"column-reverseu:Sass::Tree::IfNodeÂ[00[o:Sass::Tree::MixinNode:@keywords{ :
@linei:@options{ :
@name"legacy-flex-wrap:@children[ :@splat0:
@args[o:Sass::Script::Variable	;i;@	;	"
value:@underscored_name"
value[o:Sass::Tree::MixinNode:@keywords{ ;i;	@;
"legacy-flex-direction:@children[ :@splat0:
@args[o;	;i;	@;
"
value;"
value[o:Sass::Tree::CommentNode
;i;
@	:@children[ :
@type:silent;["0/* @box version doesn't have a shorthand */o:Sass::Tree::MixinNode;	{ ;i;
@	;"legacy-flex-direction;[ ;0;[o;;	{ ;i;
@	;"nth;0;[o;	;i;
@	;"
value;"
valueo;;i;
@	;@;[ ;"1;io;;	{ ;i;
@	;"legacy-flex-wrap;[ ;0;[o;;	{ ;i;
@	;"nth;0;[o;	;i;
@	;"
value;"
valueo;;i;
@	;@;[ ;"2;i;#0;$[[o;%;@;"
value;&"
valueo;	;;);i;@;[o;	;i;@;;;"rowo;	;i;@;;;"nowrapo;
;i;@;
[ ;;;["Q/* ---------------------------------------------------------------------- */o;
;i;@;
[ ;;;[">/* $value: row | row-reverse | column | column-reverse */o;7;i;@;"flex-direction;	T;
[u;'[o:Sass::Script::Operation
:
@linei:@operand1o:Sass::Script::Variable	;i:@options{ :
@name"legacy:@underscored_name"legacy;	@:@operator:and:@operand2o:!Sass::Script::UnaryOperation	;i;	@;:not:@operando;	;i;	@;
"	wrap;"	wrap0[o:Sass::Tree::MixinNode:@keywords{ ;i;	@;
"legacy-flex-direction:@children[ :@splat0:
@args[o;	;i;	@;
"
value;"
valueo;8;"{ ;i;@;"experimental;
[ ;#o;!;"{ ;i;{ ;"flex-support-either;#0;$[ ;$[o;	;i;@;;;"flex-directiono;%	;i;@;"
value;&"
value;#0;$[[o;%;@;"
value;&"
valueo;	;i;@;;;"row[o;%;@;"	wrap;&"	wrapo;%	;i;@;"flex-wrap-required;&"flex_wrap_required[o;%;@;"legacy;&"legacyo;%	;i;@;"flex-legacy-enabled;&"flex_legacy_enabledo;7;i;@;"legacy-flex-direction;	T;
[o;;i;0;@;"
value;o;!;"{ ;i;@;"unquote;#0;$[o;%	;i;@;"
value;&"
value;
[ o;8;"{ ;i;@;"experimental;
[ ;#o;%	;i;{ ;"box-support;&"box_support;$[o;	;i;@;;;"box-oriento;!;"{ ;i;@;"if;#0;$[o;1
;i;2o;1
;i;2o;%	;i;@;"
value;&"
value;@;:eq;4o;	;i;@;;;"row;@;;3;4o;1
;i;2o;%	;i;@;"
value;&"
value;@;;9;4o;	;i;@;;;"row-reverseo;	;i;@;;;"horizontalo;	;i;@;;;"verticalo;8;"{ ;i;@;"experimental;
[ ;#o;%	;i;{ ;"box-support;&"box_support;$[o;	;i;@;;;"box-directiono;!;"{ ;i;@;"if;#0;$[o;1
;i;2o;1
;i;2o;%	;i;@;"
value;&"
value;@;;9;4o;	;i;@;;;"row-reverse;@;;3;4o;1
;i;2o;%	;i;@;"
value;&"
value;@;;9;4o;	;i;@;;;"column-reverseo;	;i;@;;;"reverseo;	;i;@;;;"normal;#0;$[[o;%;@;"
value;&"
valueo;	;i;@;;;"rowo;
;i ;@;
[ ;;;["Q/* ---------------------------------------------------------------------- */o;
;i¢;@;
[ ;;;["//* $value: nowrap | wrap | wrap-reverse */o;7;i£;@;"flex-wrap;	T;
[u;'[o:Sass::Script::Operation
:
@linei¤:@operand1o:Sass::Script::Variable	;i¤:@options{ :
@name"legacy:@underscored_name"legacy;	@:@operator:and:@operand2o:!Sass::Script::UnaryOperation	;i¤;	@;:not:@operando;	;i¤;	@;
"	wrap;"	wrap0[o:Sass::Tree::MixinNode:@keywords{ ;i¥;	@;
"legacy-flex-wrap:@children[ :@splat0:
@args[o;	;i¥;	@;
"
value;"
valueo;8;"{ ;i¨;@;"experimental;
[ ;#o;!;"{ ;i¨;{ ;"flex-support-either;#0;$[ ;$[o;	;i¨;@;;;"flex-wrapo;%	;i¨;@;"
value;&"
value;#0;$[[o;%;@;"
value;&"
valueo;	;i£;@;;;"nowrap[o;%;@;"	wrap;&"	wrapo;%	;i£;@;"flex-wrap-required;&"flex_wrap_required[o;%;@;"legacy;&"legacyo;%	;i£;@;"flex-legacy-enabled;&"flex_legacy_enabledo;7;i«;@;"legacy-flex-wrap;	T;
[o;
;i¬;@;
[ ;;;["7/* NOTE: @box has no equivalent of wrap-reverse */o;8;"{ ;i­;@;"experimental;
[ ;#o;%	;i­;{ ;"box-support;&"box_support;$[o;	;i­;@;;;"box-lineso;!;"{ ;i­;@;"if;#0;$[o;1
;i­;2o;%	;i­;@;"
value;&"
value;@;;9;4o;	;i­;@;;;"nowrapo;	;i­;@;;;"singleo;	;i­;@;;;"multiple;#0;$[[o;%;@;"
value;&"
valueo;	;i«;@;;;"nowrapo;
;i°;@;
[ ;;;["Q/* ---------------------------------------------------------------------- */o;
;i²;@;
[ ;;;["}/* Distributing extra space along the "main axis"
 * $value: flex-start | flex-end | center | space-between | space-around */o;7;i´;@;"justify-content;	T;
[u;'[o:Sass::Script::Operation
:
@lineiµ:@operand1o:Sass::Script::Variable	;iµ:@options{ :
@name"legacy:@underscored_name"legacy;	@:@operator:and:@operand2o:!Sass::Script::UnaryOperation	;iµ;	@;:not:@operando;	;iµ;	@;
"	wrap;"	wrap0[o:Sass::Tree::MixinNode:@keywords{ ;i¶;	@;
"legacy-justify-content:@children[ :@splat0:
@args[o;	;i¶;	@;
"
value;"
valueo;8;"{ ;i¹;@;"experimental;
[ ;#o;%	;i¹;{ ;"flexbox-support;&"flexbox_support;$[o;	;i¹;@;;;"flex-packo;!;"{ ;i¹;@;"flex-translate-value;#0;$[o;%	;i¹;@;"
value;&"
valueo;	;i¹;@;;;"flexboxo;8;"{ ;iº;@;"experimental;
[ ;#o;%	;iº;{ ;"flex-support;&"flex_support;$[o;	;iº;@;;;"justify-contento;%	;iº;@;"
value;&"
value;#0;$[[o;%;@;"
value;&"
valueo;	;i´;@;;;"flex-start[o;%;@;"	wrap;&"	wrapo;%	;i´;@;"flex-wrap-required;&"flex_wrap_required[o;%;@;"legacy;&"legacyo;%	;i´;@;"flex-legacy-enabled;&"flex_legacy_enabledo;7;i½;@;"legacy-justify-content;	T;
[o;8;"{ ;i¾;@;"experimental;
[ ;#o;%	;i¾;{ ;"box-support;&"box_support;$[o;	;i¾;@;;;"box-packo;!;"{ ;i¾;@;"flex-translate-value;#0;$[o;%	;i¾;@;"
value;&"
valueo;	;i¾;@;;;"box;#0;$[[o;%;@;"
value;&"
valueo;	;i½;@;;;"flex-starto;
;iÁ;@;
[ ;;;["Q/* ---------------------------------------------------------------------- */o;
;iÃ;@;
[ ;;;["/* Distributing extra space along the "cross axis"
 * $value: flex-start | flex-end | center | space-between | space-around | stretch */o;7;iÅ;@;"align-content;	T;
[u;'[o:Sass::Script::Operation
:
@lineiÆ:@operand1o:Sass::Script::Variable	;iÆ:@options{ :
@name"legacy:@underscored_name"legacy;	@:@operator:and:@operand2o:!Sass::Script::UnaryOperation	;iÆ;	@;:not:@operando;	;iÆ;	@;
"	wrap;"	wrap0[o:Sass::Tree::MixinNode:@keywords{ ;iÇ;	@;
"legacy-align-content:@children[ :@splat0:
@args[o;	;iÇ;	@;
"
value;"
valueo;8;"{ ;iÊ;@;"experimental;
[ ;#o;%	;iÊ;{ ;"flexbox-support;&"flexbox_support;$[o;	;iÊ;@;;;"flex-line-packo;!;"{ ;iÊ;@;"flex-translate-value;#0;$[o;%	;iÊ;@;"
value;&"
valueo;	;iÊ;@;;;"flexboxo;8;"{ ;iË;@;"experimental;
[ ;#o;%	;iË;{ ;"flex-support;&"flex_support;$[o;	;iË;@;;;"align-contento;%	;iË;@;"
value;&"
value;#0;$[[o;%;@;"
value;&"
valueo;	;iÅ;@;;;"flex-start[o;%;@;"	wrap;&"	wrapo;%	;iÅ;@;"flex-wrap-required;&"flex_wrap_required[o;%;@;"legacy;&"legacyo;%	;iÅ;@;"flex-legacy-enabled;&"flex_legacy_enabledo;7;iÎ;@;"legacy-align-content;	T;
[o;8;"{ ;iÏ;@;"experimental;
[ ;#o;%	;iÏ;{ ;"box-support;&"box_support;$[o;	;iÏ;@;;;"box-aligno;!;"{ ;iÏ;@;"flex-translate-value;#0;$[o;%	;iÏ;@;"
value;&"
valueo;	;iÏ;@;;;"box;#0;$[[o;%;@;"
value;&"
valueo;	;iÎ;@;;;"flex-starto;
;iÒ;@;
[ ;;;["Q/* ---------------------------------------------------------------------- */o;
;iÔ;@;
[ ;;;["l/* Align items along the "cross axis"
 * $value: flex-start | flex-end | center | baseline | stretch */o;7;iÖ;@;"align-items;	T;
[o;
;iÖ;@;
[ ;;;["J/* the flex container
 * There is no @box version of this property */o;8;"{ ;iØ;@;"experimental;
[ ;#o;%	;iØ;{ ;"flexbox-support;&"flexbox_support;$[o;	;iØ;@;;;"flex-aligno;!;"{ ;iØ;@;"flex-translate-value;#0;$[o;%	;iØ;@;"
value;&"
valueo;	;iØ;@;;;"flexboxo;8;"{ ;iÙ;@;"experimental;
[ ;#o;%	;iÙ;{ ;"flex-support;&"flex_support;$[o;	;iÙ;@;;;"align-itemso;%	;iÙ;@;"
value;&"
value;#0;$[[o;%;@;"
value;&"
valueo;	;iÖ;@;;;"stretcho;
;iÜ;@;
[ ;;;["2/* ====================================================================================================
 *                                                                       | Flex Item Properties
 * ==================================================================================================== */o;
;ià;@;
[ ;;;["N/* $value: none | [ <'flex-grow'> <'flex-shrink'>? || <'flex-basis'> ] */o;7;iá;@;"	flex;	T;
[o;;iâ;0;@;"
value;o;!;"{ ;iâ;@;"unquote;#0;$[o;%	;iâ;@;"
value;&"
value;
[ u;'Ä[o:Sass::Script::Operation
:
@lineiã:@operand1o:Sass::Script::Variable	;iã:@options{ :
@name"legacy:@underscored_name"legacy;	@:@operator:and:@operand2o:Sass::Script::Funcall:@keywords{ ;iã;	@;
"unitless:@splat0:
@args[o;;{ ;iã;	@;
"nth;0;[o;	;iã;	@;
"
value;"
valueo:Sass::Script::Number;iã;	@:@denominator_units[ :@numerator_units[ :@original"1:@valuei0[o:Sass::Tree::CommentNode
;iä;	@:@children[ :
@type:silent;["I/* @box version does not have a shorthand, see `legacy-flex-grow` */o:Sass::Tree::MixinNode;{ ;iå;	@;
"legacy-flex-grow;[ ;0;[o;;{ ;iå;	@;
"nth;0;[o;	;iå;	@;
"
value;"
valueo;;iå;	@;@;[ ;"1;io;8;"{ ;iè;@;"experimental;
[ ;#o;!;"{ ;iè;{ ;"flex-support-either;#0;$[ ;$[o;	;iè;@;;;"	flexo;%	;iè;@;"
value;&"
value;#0;$[[o;%;@;"
value;&"
valueo;	;;);iá;@;[o;,;iá;@;-@¥;.[ ;/"0;i o;,;iá;@;-@¥;.[ ;/"1;io;	;iá;@;;;"	auto[o;%;@;"	wrap;&"	wrapo;%	;iá;@;"flex-wrap-required;&"flex_wrap_required[o;%;@;"legacy;&"legacyo;%	;iá;@;"flex-legacy-enabled;&"flex_legacy_enabledo;
;ië;@;
[ ;;;["Q/* ---------------------------------------------------------------------- */o;
;ií;@;
[ ;;;["/* $value: Integer */o;7;iî;@;"flex-grow;	T;
[u;'[o:Sass::Script::Operation
:
@lineiï:@operand1o:Sass::Script::Variable	;iï:@options{ :
@name"legacy:@underscored_name"legacy;	@:@operator:and:@operand2o:!Sass::Script::UnaryOperation	;iï;	@;:not:@operando;	;iï;	@;
"	wrap;"	wrap0[o:Sass::Tree::MixinNode:@keywords{ ;ið;	@;
"legacy-flex-grow:@children[ :@splat0:
@args[o;	;ið;	@;
"
value;"
valueo;
;ió;@;
[ ;;;["8/* There is no @flexbox version of this property */o;8;"{ ;iô;@;"experimental;
[ ;#o;%	;iô;{ ;"flex-support;&"flex_support;$[o;	;iô;@;;;"flex-growo;%	;iô;@;"
value;&"
value;#0;$[[o;%;@;"
value;&"
valueo;,;iî;@;-@¥;.[ ;/"0;i [o;%;@;"	wrap;&"	wrapo;%	;iî;@;"flex-wrap-required;&"flex_wrap_required[o;%;@;"legacy;&"legacyo;%	;iî;@;"flex-legacy-enabled;&"flex_legacy_enabledo;7;i÷;@;"legacy-flex-grow;	T;
[o;8;"{ ;iø;@;"experimental;
[ ;#o;%	;iø;{ ;"box-support;&"box_support;$[o;	;iø;@;;;"box-flexo;%	;iø;@;"
value;&"
value;#0;$[[o;%;@;"
value;&"
valueo;,;i÷;@;-@¥;.[ ;/"0;i o;
;iû;@;
[ ;;;["Q/* ---------------------------------------------------------------------- */o;
;iý;@;
[ ;;;["/* $value: Integer */o;7;iþ;@;"flex-shrink;	T;
[o;
;iÿ;@;
[ ;;;["e/* There is no @box version of this property
 * There is no @flexbox version of this property */o;8;"{ ;i;@;"experimental;
[ ;#o;%	;i;{ ;"flex-support;&"flex_support;$[o;	;i;@;;;"flex-shrinko;%	;i;@;"
value;&"
value;#0;$[[o;%;@;"
value;&"
valueo;,;iþ;@;-@¥;.[ ;/"1;io;
;i;@;
[ ;;;["Q/* ---------------------------------------------------------------------- */o;
;i;@;
[ ;;;[",/* $value: united number (eg: 100px) */o;7;i;@;"flex-basis;	T;
[o;
;i;@;
[ ;;;["e/* There is no @box version of this property
 * There is no @flexbox version of this property */o;8;"{ ;i
;@;"experimental;
[ ;#o;%	;i
;{ ;"flex-support;&"flex_support;$[o;	;i
;@;;;"flex-basiso;%	;i
;@;"
value;&"
value;#0;$[[o;%;@;"
value;&"
valueo;	;i;@;;;"	autoo;
;i;@;
[ ;;;["Q/* ---------------------------------------------------------------------- */o;
;i;@;
[ ;;;["£/* Align items along the "cross axis" -- overrides `align-items` value on individual items
 * $value: auto | flex-start | flex-end | center | baseline | stretch */o;7;i;@;"align-self;	T;
[o;
;i;@;
[ ;;;["S/* children of flex containers
 * There is no @box version of this property */o;8;"{ ;i;@;"experimental;
[ ;#o;%	;i;{ ;"flexbox-support;&"flexbox_support;$[o;	;i;@;;;"flex-item-aligno;!;"{ ;i;@;"flex-translate-value;#0;$[o;%	;i;@;"
value;&"
valueo;	;i;@;;;"flexboxo;8;"{ ;i;@;"experimental;
[ ;#o;%	;i;{ ;"flex-support;&"flex_support;$[o;	;i;@;;;"align-selfo;%	;i;@;"
value;&"
value;#0;$[[o;%;@;"
value;&"
valueo;	;i;@;;;"	autoo;
;i;@;
[ ;;;["Q/* ---------------------------------------------------------------------- */o;
;i;@;
[ ;;;["/* $value: Integer */o;7;i;@;"
order;	T;
[u;'[o:Sass::Script::Operation
:
@linei:@operand1o:Sass::Script::Variable	;i:@options{ :
@name"legacy:@underscored_name"legacy;	@:@operator:and:@operand2o:!Sass::Script::UnaryOperation	;i;	@;:not:@operando;	;i;	@;
"	wrap;"	wrap0[o:Sass::Tree::MixinNode:@keywords{ ;i;	@;
"legacy-order:@children[ :@splat0:
@args[o;	;i;	@;
"
value;"
valueo;8;"{ ;i;@;"experimental;
[ ;#o;%	;i;{ ;"flexbox-support;&"flexbox_support;$[o;	;i;@;;;"flex-ordero;%	;i;@;"
value;&"
valueo;8;"{ ;i ;@;"experimental;
[ ;#o;%	;i ;{ ;"flex-support;&"flex_support;$[o;	;i ;@;;;"
ordero;%	;i ;@;"
value;&"
value;#0;$[[o;%;@;"
value;&"
valueo;,;i;@;-@¥;.[ ;/"0;i [o;%;@;"	wrap;&"	wrapo;%	;i;@;"flex-wrap-required;&"flex_wrap_required[o;%;@;"legacy;&"legacyo;%	;i;@;"flex-legacy-enabled;&"flex_legacy_enabledo;7;i#;@;"legacy-order;	T;
[o;
;i$;@;
[ ;;;["T/* the @box spec starts the ordering at 1 instead of 0 like the modern specs */o;8;"{ ;i%;@;"experimental;
[ ;#o;%	;i%;{ ;"box-support;&"box_support;$[o;	;i%;@;;;"box-ordinal-groupo;1
;i%;2o;%	;i%;@;"
value;&"
value;@;:	plus;4o;,;i%;@;-@¥;.[ ;/"1;i;#0;$[[o;%;@;"
value;&"
valueo;,;i#;@;-@¥;.[ ;/"0;i 